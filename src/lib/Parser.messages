ground_gringo: CNAME LPAREN CNAME COMMA CNAME LPAREN RPAREN VNAME
##
## Ends in an error in state: 204.
##
## fact -> CNAME LPAREN CNAME COMMA ground_atom . RPAREN DOT [ EOF CNAME ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN CNAME COMMA ground_atom
##

<YOUR SYNTAX ERROR MESSAGE HERE>

ground_gringo: CNAME LPAREN CNAME COMMA CNAME RPAREN VNAME
##
## Ends in an error in state: 205.
##
## fact -> CNAME LPAREN CNAME COMMA ground_atom RPAREN . DOT [ EOF CNAME ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN CNAME COMMA ground_atom RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

ground_gringo: CNAME LPAREN CNAME COMMA VNAME
##
## Ends in an error in state: 203.
##
## fact -> CNAME LPAREN CNAME COMMA . ground_atom RPAREN DOT [ EOF CNAME ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN CNAME COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

ground_gringo: CNAME LPAREN CNAME LPAREN CNAME LPAREN VNAME
##
## Ends in an error in state: 190.
##
## ground_term -> CNAME LPAREN . loption(separated_nonempty_list(COMMA,ground_term)) RPAREN [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

ground_gringo: CNAME LPAREN CNAME LPAREN CNAME VNAME
##
## Ends in an error in state: 189.
##
## ground_term -> CNAME . [ RPAREN COMMA ]
## ground_term -> CNAME . LPAREN loption(separated_nonempty_list(COMMA,ground_term)) RPAREN [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

ground_gringo: CNAME LPAREN CNAME LPAREN INT COMMA VNAME
##
## Ends in an error in state: 195.
##
## separated_nonempty_list(COMMA,ground_term) -> ground_term COMMA . separated_nonempty_list(COMMA,ground_term) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## ground_term COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

ground_gringo: CNAME LPAREN CNAME LPAREN INT VNAME
##
## Ends in an error in state: 194.
##
## separated_nonempty_list(COMMA,ground_term) -> ground_term . [ RPAREN ]
## separated_nonempty_list(COMMA,ground_term) -> ground_term . COMMA separated_nonempty_list(COMMA,ground_term) [ RPAREN ]
##
## The known suffix of the stack is as follows:
## ground_term
##

<YOUR SYNTAX ERROR MESSAGE HERE>

ground_gringo: CNAME LPAREN CNAME LPAREN RPAREN VNAME
##
## Ends in an error in state: 207.
##
## fact -> CNAME LPAREN ground_atom . RPAREN DOT [ EOF CNAME ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN ground_atom
##

<YOUR SYNTAX ERROR MESSAGE HERE>

ground_gringo: CNAME LPAREN CNAME LPAREN VNAME
##
## Ends in an error in state: 187.
##
## ground_atom -> CNAME LPAREN . loption(separated_nonempty_list(COMMA,ground_term)) RPAREN [ RPAREN ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

ground_gringo: CNAME LPAREN CNAME RPAREN DOT VNAME
##
## Ends in an error in state: 213.
##
## list(fact) -> fact . list(fact) [ EOF ]
##
## The known suffix of the stack is as follows:
## fact
##

<YOUR SYNTAX ERROR MESSAGE HERE>

ground_gringo: CNAME LPAREN CNAME RPAREN VNAME
##
## Ends in an error in state: 208.
##
## fact -> CNAME LPAREN ground_atom RPAREN . DOT [ EOF CNAME ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN ground_atom RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

ground_gringo: CNAME LPAREN CNAME VNAME
##
## Ends in an error in state: 202.
##
## fact -> CNAME LPAREN CNAME . COMMA ground_atom RPAREN DOT [ EOF CNAME ]
## ground_atom -> CNAME . [ RPAREN ]
## ground_atom -> CNAME . LPAREN loption(separated_nonempty_list(COMMA,ground_term)) RPAREN [ RPAREN ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

ground_gringo: CNAME LPAREN INT COMMA CNAME LPAREN RPAREN VNAME
##
## Ends in an error in state: 199.
##
## fact -> CNAME LPAREN INT COMMA ground_atom . RPAREN DOT [ EOF CNAME ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN INT COMMA ground_atom
##

<YOUR SYNTAX ERROR MESSAGE HERE>

ground_gringo: CNAME LPAREN INT COMMA CNAME RPAREN VNAME
##
## Ends in an error in state: 200.
##
## fact -> CNAME LPAREN INT COMMA ground_atom RPAREN . DOT [ EOF CNAME ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN INT COMMA ground_atom RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

ground_gringo: CNAME LPAREN INT COMMA CNAME VNAME
##
## Ends in an error in state: 186.
##
## ground_atom -> CNAME . [ RPAREN ]
## ground_atom -> CNAME . LPAREN loption(separated_nonempty_list(COMMA,ground_term)) RPAREN [ RPAREN ]
##
## The known suffix of the stack is as follows:
## CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

ground_gringo: CNAME LPAREN INT COMMA VNAME
##
## Ends in an error in state: 185.
##
## fact -> CNAME LPAREN INT COMMA . ground_atom RPAREN DOT [ EOF CNAME ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN INT COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

ground_gringo: CNAME LPAREN INT VNAME
##
## Ends in an error in state: 184.
##
## fact -> CNAME LPAREN INT . COMMA ground_atom RPAREN DOT [ EOF CNAME ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN INT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

ground_gringo: CNAME LPAREN VNAME
##
## Ends in an error in state: 183.
##
## fact -> CNAME LPAREN . ground_atom RPAREN DOT [ EOF CNAME ]
## fact -> CNAME LPAREN . INT COMMA ground_atom RPAREN DOT [ EOF CNAME ]
## fact -> CNAME LPAREN . CNAME COMMA ground_atom RPAREN DOT [ EOF CNAME ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

ground_gringo: CNAME VNAME
##
## Ends in an error in state: 182.
##
## fact -> CNAME . LPAREN ground_atom RPAREN DOT [ EOF CNAME ]
## fact -> CNAME . LPAREN INT COMMA ground_atom RPAREN DOT [ EOF CNAME ]
## fact -> CNAME . LPAREN CNAME COMMA ground_atom RPAREN DOT [ EOF CNAME ]
##
## The known suffix of the stack is as follows:
## CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

ground_gringo: VNAME
##
## Ends in an error in state: 181.
##
## ground_gringo' -> . ground_gringo [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME CONJ CNAME DOT
##
## Ends in an error in state: 175.
##
## clause_part -> clause_body . IMPLIES clause_head [ DOT COMMA ]
##
## The known suffix of the stack is as follows:
## clause_body
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 92, spurious reduction of production atom -> CNAME
## In state 57, spurious reduction of production literal -> atom
## In state 148, spurious reduction of production literals -> literal
## In state 162, spurious reduction of production separated_nonempty_list(CONJ,literals) -> literals
## In state 161, spurious reduction of production separated_nonempty_list(CONJ,literals) -> literals CONJ separated_nonempty_list(CONJ,literals)
## In state 136, spurious reduction of production loption(separated_nonempty_list(CONJ,literals)) -> separated_nonempty_list(CONJ,literals)
## In state 142, spurious reduction of production clause_body -> loption(separated_nonempty_list(CONJ,literals))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME CONJ SHOW
##
## Ends in an error in state: 160.
##
## separated_nonempty_list(CONJ,literals) -> literals CONJ . separated_nonempty_list(CONJ,literals) [ IMPLIES DOT COMMA ]
##
## The known suffix of the stack is as follows:
## literals CONJ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME DISJ SHOW
##
## Ends in an error in state: 145.
##
## separated_nonempty_list(DISJ,literals) -> literals DISJ . separated_nonempty_list(DISJ,literals) [ IMPLIED DOT COMMA ]
##
## The known suffix of the stack is as follows:
## literals DISJ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME LBRACKET SHOW
##
## Ends in an error in state: 60.
##
## grounding_atom -> CNAME LBRACKET . loption(separated_nonempty_list(COMMA,term)) RBRACKET [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## CNAME LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME LBRACKET VNAME RPAREN
##
## Ends in an error in state: 61.
##
## grounding_atom -> CNAME LBRACKET loption(separated_nonempty_list(COMMA,term)) . RBRACKET [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## CNAME LBRACKET loption(separated_nonempty_list(COMMA,term))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 46, spurious reduction of production term -> expr
## In state 43, spurious reduction of production separated_nonempty_list(COMMA,term) -> term
## In state 47, spurious reduction of production loption(separated_nonempty_list(COMMA,term)) -> separated_nonempty_list(COMMA,term)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME LPAREN RPAREN VNAME
##
## Ends in an error in state: 95.
##
## atom -> CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . [ IMPLIES IMPLIED DOT DISJ CONJ COMMA ]
## term -> CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN . [ NEQ LT LEQ GT GEQ EQ ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME LPAREN SHOW
##
## Ends in an error in state: 93.
##
## atom -> CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES IMPLIED DOT DISJ CONJ COMMA ]
## term -> CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN [ NEQ LT LEQ GT GEQ EQ ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME LPAREN UNDERSCORE VNAME
##
## Ends in an error in state: 43.
##
## separated_nonempty_list(COMMA,term) -> term . [ RPAREN RBRACKET ]
## separated_nonempty_list(COMMA,term) -> term . COMMA separated_nonempty_list(COMMA,term) [ RPAREN RBRACKET ]
##
## The known suffix of the stack is as follows:
## term
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME LPAREN VNAME COMMA SHOW
##
## Ends in an error in state: 44.
##
## separated_nonempty_list(COMMA,term) -> term COMMA . separated_nonempty_list(COMMA,term) [ RPAREN RBRACKET ]
##
## The known suffix of the stack is as follows:
## term COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME LPAREN VNAME RBRACKET
##
## Ends in an error in state: 94.
##
## atom -> CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN [ IMPLIES IMPLIED DOT DISJ CONJ COMMA ]
## term -> CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN [ NEQ LT LEQ GT GEQ EQ ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN loption(separated_nonempty_list(COMMA,term))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 46, spurious reduction of production term -> expr
## In state 43, spurious reduction of production separated_nonempty_list(COMMA,term) -> term
## In state 47, spurious reduction of production loption(separated_nonempty_list(COMMA,term)) -> separated_nonempty_list(COMMA,term)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: CNAME VNAME
##
## Ends in an error in state: 92.
##
## atom -> CNAME . [ IMPLIES IMPLIED DOT DISJ CONJ COMMA ]
## atom -> CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES IMPLIED DOT DISJ CONJ COMMA ]
## grounding_atom -> CNAME . LBRACKET loption(separated_nonempty_list(COMMA,term)) RBRACKET [ DCOLON COMMA COLON ]
## term -> CNAME . [ NEQ LT LEQ GT GEQ EQ ]
## term -> CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ NEQ LT LEQ GT GEQ EQ ]
##
## The known suffix of the stack is as follows:
## CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: COLON VNAME
##
## Ends in an error in state: 150.
##
## literals -> grounding_prefix COLON . literal [ IMPLIES IMPLIED DOT DISJ CONJ COMMA ]
##
## The known suffix of the stack is as follows:
## grounding_prefix COLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: COMMA SHOW
##
## Ends in an error in state: 170.
##
## separated_nonempty_list(COMMA,clause_part) -> clause_part COMMA . separated_nonempty_list(COMMA,clause_part) [ DOT ]
##
## The known suffix of the stack is as follows:
## clause_part COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DCOLON RPAREN
##
## Ends in an error in state: 166.
##
## decl -> grounding_prefix DCOLON . pre_decl DOT [ VNAME UNDERSCORE SHOW NOT MINUS LPAREN INT IMPLIES IMPLIED HIDE GROUND FORALL EXISTS EOF DOT DCOLON COMMA COLON CNAME ]
##
## The known suffix of the stack is as follows:
## grounding_prefix DCOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: DOT RPAREN
##
## Ends in an error in state: 179.
##
## list(decl) -> decl . list(decl) [ EOF ]
##
## The known suffix of the stack is as follows:
## decl
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: EXISTS CNAME COMMA VNAME
##
## Ends in an error in state: 86.
##
## separated_nonempty_list(COMMA,search_atomd) -> search_atomd COMMA . separated_nonempty_list(COMMA,search_atomd) [ DOT ]
##
## The known suffix of the stack is as follows:
## search_atomd COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: EXISTS CNAME LPAREN RPAREN VNAME
##
## Ends in an error in state: 85.
##
## separated_nonempty_list(COMMA,search_atomd) -> search_atomd . [ DOT ]
## separated_nonempty_list(COMMA,search_atomd) -> search_atomd . COMMA separated_nonempty_list(COMMA,search_atomd) [ DOT ]
##
## The known suffix of the stack is as follows:
## search_atomd
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: EXISTS CNAME LPAREN UNDERSCORE
##
## Ends in an error in state: 81.
##
## search_atomd -> CNAME LPAREN . loption(separated_nonempty_list(COMMA,tuple)) RPAREN [ DOT COMMA ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: EXISTS CNAME LPAREN VNAME RBRACKET
##
## Ends in an error in state: 82.
##
## search_atomd -> CNAME LPAREN loption(separated_nonempty_list(COMMA,tuple)) . RPAREN [ DOT COMMA ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN loption(separated_nonempty_list(COMMA,tuple))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 29, spurious reduction of production tuple -> expr
## In state 26, spurious reduction of production separated_nonempty_list(COMMA,tuple) -> tuple
## In state 32, spurious reduction of production loption(separated_nonempty_list(COMMA,tuple)) -> separated_nonempty_list(COMMA,tuple)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: EXISTS CNAME VNAME
##
## Ends in an error in state: 80.
##
## search_atomd -> CNAME . [ DOT COMMA ]
## search_atomd -> CNAME . LPAREN loption(separated_nonempty_list(COMMA,tuple)) RPAREN [ DOT COMMA ]
##
## The known suffix of the stack is as follows:
## CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: EXISTS LBRACKET INT RBRACKET VNAME
##
## Ends in an error in state: 90.
##
## pre_decl -> EXISTS quantifier_block . separated_nonempty_list(COMMA,search_atomd) [ DOT ]
##
## The known suffix of the stack is as follows:
## EXISTS quantifier_block
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: EXISTS VNAME
##
## Ends in an error in state: 88.
##
## pre_decl -> EXISTS . separated_nonempty_list(COMMA,search_atomd) [ DOT ]
## pre_decl -> EXISTS . quantifier_block separated_nonempty_list(COMMA,search_atomd) [ DOT ]
##
## The known suffix of the stack is as follows:
## EXISTS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: FORALL LBRACKET UNDERSCORE
##
## Ends in an error in state: 76.
##
## quantifier_block -> LBRACKET . expr RBRACKET [ CNAME ]
##
## The known suffix of the stack is as follows:
## LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: FORALL LBRACKET VNAME RBRACKET VNAME
##
## Ends in an error in state: 79.
##
## pre_decl -> FORALL quantifier_block . separated_nonempty_list(COMMA,search_atomd) [ DOT ]
##
## The known suffix of the stack is as follows:
## FORALL quantifier_block
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: FORALL LBRACKET VNAME VNAME
##
## Ends in an error in state: 77.
##
## expr -> expr . DIV expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . LOG expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . MOD expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . MULT expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . POW expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . PLUS expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . MINUS expr [ RBRACKET POW PLUS MULT MOD MINUS LOG DIV ]
## quantifier_block -> LBRACKET expr . RBRACKET [ CNAME ]
##
## The known suffix of the stack is as follows:
## LBRACKET expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: FORALL VNAME
##
## Ends in an error in state: 75.
##
## pre_decl -> FORALL . quantifier_block separated_nonempty_list(COMMA,search_atomd) [ DOT ]
##
## The known suffix of the stack is as follows:
## FORALL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: GROUND CNAME LBRACKET RBRACKET COMMA VNAME
##
## Ends in an error in state: 73.
##
## separated_nonempty_list(COMMA,ground_atomd) -> ground_atomd COMMA . separated_nonempty_list(COMMA,ground_atomd) [ DOT ]
##
## The known suffix of the stack is as follows:
## ground_atomd COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: GROUND CNAME LBRACKET RBRACKET VNAME
##
## Ends in an error in state: 72.
##
## separated_nonempty_list(COMMA,ground_atomd) -> ground_atomd . [ DOT ]
## separated_nonempty_list(COMMA,ground_atomd) -> ground_atomd . COMMA separated_nonempty_list(COMMA,ground_atomd) [ DOT ]
##
## The known suffix of the stack is as follows:
## ground_atomd
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: GROUND CNAME LBRACKET UNDERSCORE
##
## Ends in an error in state: 68.
##
## ground_atomd -> CNAME LBRACKET . loption(separated_nonempty_list(COMMA,tuple)) RBRACKET [ DOT COMMA ]
##
## The known suffix of the stack is as follows:
## CNAME LBRACKET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: GROUND CNAME LBRACKET VNAME COMMA UNDERSCORE
##
## Ends in an error in state: 27.
##
## separated_nonempty_list(COMMA,tuple) -> tuple COMMA . separated_nonempty_list(COMMA,tuple) [ RPAREN RBRACKET ]
##
## The known suffix of the stack is as follows:
## tuple COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: GROUND CNAME LBRACKET VNAME DCOLON
##
## Ends in an error in state: 26.
##
## separated_nonempty_list(COMMA,tuple) -> tuple . [ RPAREN RBRACKET ]
## separated_nonempty_list(COMMA,tuple) -> tuple . COMMA separated_nonempty_list(COMMA,tuple) [ RPAREN RBRACKET ]
##
## The known suffix of the stack is as follows:
## tuple
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 29, spurious reduction of production tuple -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: GROUND CNAME LBRACKET VNAME RPAREN
##
## Ends in an error in state: 69.
##
## ground_atomd -> CNAME LBRACKET loption(separated_nonempty_list(COMMA,tuple)) . RBRACKET [ DOT COMMA ]
##
## The known suffix of the stack is as follows:
## CNAME LBRACKET loption(separated_nonempty_list(COMMA,tuple))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 29, spurious reduction of production tuple -> expr
## In state 26, spurious reduction of production separated_nonempty_list(COMMA,tuple) -> tuple
## In state 32, spurious reduction of production loption(separated_nonempty_list(COMMA,tuple)) -> separated_nonempty_list(COMMA,tuple)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: GROUND CNAME VNAME
##
## Ends in an error in state: 67.
##
## ground_atomd -> CNAME . LBRACKET loption(separated_nonempty_list(COMMA,tuple)) RBRACKET [ DOT COMMA ]
##
## The known suffix of the stack is as follows:
## CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: GROUND VNAME
##
## Ends in an error in state: 66.
##
## pre_decl -> GROUND . separated_nonempty_list(COMMA,ground_atomd) [ DOT ]
##
## The known suffix of the stack is as follows:
## GROUND
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: HIDE CNAME COMMA VNAME
##
## Ends in an error in state: 55.
##
## separated_nonempty_list(COMMA,literal) -> literal COMMA . separated_nonempty_list(COMMA,literal) [ DOT ]
##
## The known suffix of the stack is as follows:
## literal COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: HIDE CNAME IMPLIES
##
## Ends in an error in state: 54.
##
## separated_nonempty_list(COMMA,literal) -> literal . [ DOT ]
## separated_nonempty_list(COMMA,literal) -> literal . COMMA separated_nonempty_list(COMMA,literal) [ DOT ]
##
## The known suffix of the stack is as follows:
## literal
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 39, spurious reduction of production atom -> CNAME
## In state 57, spurious reduction of production literal -> atom
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: HIDE CNAME LPAREN SHOW
##
## Ends in an error in state: 40.
##
## atom -> CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES IMPLIED DOT DISJ CONJ COMMA ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: HIDE CNAME LPAREN VNAME RBRACKET
##
## Ends in an error in state: 50.
##
## atom -> CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN [ IMPLIES IMPLIED DOT DISJ CONJ COMMA ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN loption(separated_nonempty_list(COMMA,term))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 46, spurious reduction of production term -> expr
## In state 43, spurious reduction of production separated_nonempty_list(COMMA,term) -> term
## In state 47, spurious reduction of production loption(separated_nonempty_list(COMMA,term)) -> separated_nonempty_list(COMMA,term)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: HIDE CNAME VNAME
##
## Ends in an error in state: 39.
##
## atom -> CNAME . [ IMPLIES IMPLIED DOT DISJ CONJ COMMA ]
## atom -> CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES IMPLIED DOT DISJ CONJ COMMA ]
##
## The known suffix of the stack is as follows:
## CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: HIDE NOT VNAME
##
## Ends in an error in state: 38.
##
## literal -> NOT . atom [ IMPLIES IMPLIED DOT DISJ CONJ COMMA ]
##
## The known suffix of the stack is as follows:
## NOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: HIDE VNAME
##
## Ends in an error in state: 64.
##
## pre_decl -> HIDE . separated_nonempty_list(COMMA,literal) [ DOT ]
##
## The known suffix of the stack is as follows:
## HIDE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIED CNAME IMPLIED
##
## Ends in an error in state: 162.
##
## separated_nonempty_list(CONJ,literals) -> literals . [ IMPLIES DOT COMMA ]
## separated_nonempty_list(CONJ,literals) -> literals . CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES DOT COMMA ]
##
## The known suffix of the stack is as follows:
## literals
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 92, spurious reduction of production atom -> CNAME
## In state 57, spurious reduction of production literal -> atom
## In state 148, spurious reduction of production literals -> literal
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIED CNAME IMPLIES
##
## Ends in an error in state: 169.
##
## separated_nonempty_list(COMMA,clause_part) -> clause_part . [ DOT ]
## separated_nonempty_list(COMMA,clause_part) -> clause_part . COMMA separated_nonempty_list(COMMA,clause_part) [ DOT ]
##
## The known suffix of the stack is as follows:
## clause_part
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 92, spurious reduction of production atom -> CNAME
## In state 57, spurious reduction of production literal -> atom
## In state 148, spurious reduction of production literals -> literal
## In state 162, spurious reduction of production separated_nonempty_list(CONJ,literals) -> literals
## In state 136, spurious reduction of production loption(separated_nonempty_list(CONJ,literals)) -> separated_nonempty_list(CONJ,literals)
## In state 142, spurious reduction of production clause_body -> loption(separated_nonempty_list(CONJ,literals))
## In state 174, spurious reduction of production clause_part -> clause_head IMPLIED clause_body
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIED SHOW
##
## Ends in an error in state: 173.
##
## clause_part -> clause_head IMPLIED . clause_body [ DOT COMMA ]
##
## The known suffix of the stack is as follows:
## clause_head IMPLIED
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIES CNAME IMPLIES
##
## Ends in an error in state: 147.
##
## separated_nonempty_list(DISJ,literals) -> literals . [ IMPLIED DOT COMMA ]
## separated_nonempty_list(DISJ,literals) -> literals . DISJ separated_nonempty_list(DISJ,literals) [ IMPLIED DOT COMMA ]
##
## The known suffix of the stack is as follows:
## literals
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 92, spurious reduction of production atom -> CNAME
## In state 57, spurious reduction of production literal -> atom
## In state 148, spurious reduction of production literals -> literal
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIES SHOW
##
## Ends in an error in state: 176.
##
## clause_part -> clause_body IMPLIES . clause_head [ DOT COMMA ]
##
## The known suffix of the stack is as follows:
## clause_body IMPLIES
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: IMPLIES VNAME EQ VNAME DCOLON
##
## Ends in an error in state: 149.
##
## literals -> grounding_prefix . COLON literal [ IMPLIES IMPLIED DOT DISJ CONJ COMMA ]
##
## The known suffix of the stack is as follows:
## grounding_prefix
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 46, spurious reduction of production term -> expr
## In state 100, spurious reduction of production nonempty_list(pair(c_eoperator,term)) -> EQ term
## In state 103, spurious reduction of production chain -> term nonempty_list(pair(c_eoperator,term))
## In state 159, spurious reduction of production ground_literal -> chain
## In state 153, spurious reduction of production separated_nonempty_list(COMMA,ground_literal) -> ground_literal
## In state 137, spurious reduction of production loption(separated_nonempty_list(COMMA,ground_literal)) -> separated_nonempty_list(COMMA,ground_literal)
## In state 143, spurious reduction of production grounding_prefix -> loption(separated_nonempty_list(COMMA,ground_literal))
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: INT VNAME
##
## Ends in an error in state: 46.
##
## expr -> expr . DIV expr [ RPAREN RBRACKET POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . LOG expr [ RPAREN RBRACKET POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MOD expr [ RPAREN RBRACKET POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MULT expr [ RPAREN RBRACKET POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . POW expr [ RPAREN RBRACKET POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . PLUS expr [ RPAREN RBRACKET POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MINUS expr [ RPAREN RBRACKET POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## term -> expr . [ RPAREN RBRACKET NEQ LT LEQ GT GEQ EQ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: LPAREN UNDERSCORE
##
## Ends in an error in state: 5.
##
## expr -> LPAREN . expr RPAREN [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: LPAREN VNAME VNAME
##
## Ends in an error in state: 7.
##
## expr -> expr . DIV expr [ RPAREN POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . LOG expr [ RPAREN POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . MOD expr [ RPAREN POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . MULT expr [ RPAREN POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . POW expr [ RPAREN POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . PLUS expr [ RPAREN POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> expr . MINUS expr [ RPAREN POW PLUS MULT MOD MINUS LOG DIV ]
## expr -> LPAREN expr . RPAREN [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LPAREN expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: MINUS UNDERSCORE
##
## Ends in an error in state: 4.
##
## expr -> MINUS . expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## MINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: MINUS VNAME VNAME
##
## Ends in an error in state: 23.
##
## expr -> expr . DIV expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . LOG expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MOD expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MULT expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . POW expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . PLUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MINUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> MINUS expr . [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## MINUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: NOT CNAME LPAREN RPAREN VNAME
##
## Ends in an error in state: 144.
##
## separated_nonempty_list(CONJ,literals) -> literals . [ IMPLIES ]
## separated_nonempty_list(CONJ,literals) -> literals . CONJ separated_nonempty_list(CONJ,literals) [ IMPLIES ]
## separated_nonempty_list(DISJ,literals) -> literals . [ IMPLIED DOT COMMA ]
## separated_nonempty_list(DISJ,literals) -> literals . DISJ separated_nonempty_list(DISJ,literals) [ IMPLIED DOT COMMA ]
##
## The known suffix of the stack is as follows:
## literals
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: NOT CNAME VNAME
##
## Ends in an error in state: 59.
##
## atom -> CNAME . [ IMPLIES IMPLIED DOT DISJ CONJ COMMA ]
## atom -> CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ IMPLIES IMPLIED DOT DISJ CONJ COMMA ]
## grounding_atom -> CNAME . LBRACKET loption(separated_nonempty_list(COMMA,term)) RBRACKET [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: NOT VNAME
##
## Ends in an error in state: 58.
##
## ground_literal -> NOT . grounding_atom [ DCOLON COMMA COLON ]
## literal -> NOT . atom [ IMPLIES IMPLIED DOT DISJ CONJ COMMA ]
##
## The known suffix of the stack is as follows:
## NOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: RPAREN
##
## Ends in an error in state: 0.
##
## file' -> . file [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: SHOW VNAME
##
## Ends in an error in state: 37.
##
## pre_decl -> SHOW . separated_nonempty_list(COMMA,literal) [ DOT ]
##
## The known suffix of the stack is as follows:
## SHOW
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: UNDERSCORE VNAME
##
## Ends in an error in state: 96.
##
## chain -> term . list(pair(c_eoperator,term)) LT term list(pair(c_eloperator,term)) [ DCOLON COMMA COLON ]
## chain -> term . list(pair(c_eoperator,term)) LEQ term list(pair(c_eloperator,term)) [ DCOLON COMMA COLON ]
## chain -> term . list(pair(c_eoperator,term)) GT term list(pair(c_egoperator,term)) [ DCOLON COMMA COLON ]
## chain -> term . list(pair(c_eoperator,term)) GEQ term list(pair(c_egoperator,term)) [ DCOLON COMMA COLON ]
## chain -> term . nonempty_list(pair(c_eoperator,term)) [ DCOLON COMMA COLON ]
## ground_literal -> term . NEQ term [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## term
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME DEFINE CNAME COMMA CNAME VNAME
##
## Ends in an error in state: 157.
##
## grounding_atom -> CNAME . LBRACKET loption(separated_nonempty_list(COMMA,term)) RBRACKET [ DCOLON COMMA COLON ]
## term -> CNAME . [ NEQ LT LEQ GT GEQ EQ ]
## term -> CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ NEQ LT LEQ GT GEQ EQ ]
##
## The known suffix of the stack is as follows:
## CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME DEFINE CNAME COMMA NOT CNAME VNAME
##
## Ends in an error in state: 156.
##
## grounding_atom -> CNAME . LBRACKET loption(separated_nonempty_list(COMMA,term)) RBRACKET [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME DEFINE CNAME COMMA NOT VNAME
##
## Ends in an error in state: 155.
##
## ground_literal -> NOT . grounding_atom [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## NOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME DEFINE CNAME COMMA SHOW
##
## Ends in an error in state: 154.
##
## separated_nonempty_list(COMMA,ground_literal) -> ground_literal COMMA . separated_nonempty_list(COMMA,ground_literal) [ DCOLON COLON ]
##
## The known suffix of the stack is as follows:
## ground_literal COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME DEFINE CNAME LPAREN UNDERSCORE
##
## Ends in an error in state: 25.
##
## tuple -> CNAME LPAREN . loption(separated_nonempty_list(COMMA,tuple)) RPAREN [ RPAREN RBRACKET DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME DEFINE CNAME LPAREN VNAME RBRACKET
##
## Ends in an error in state: 33.
##
## tuple -> CNAME LPAREN loption(separated_nonempty_list(COMMA,tuple)) . RPAREN [ RPAREN RBRACKET DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN loption(separated_nonempty_list(COMMA,tuple))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 29, spurious reduction of production tuple -> expr
## In state 26, spurious reduction of production separated_nonempty_list(COMMA,tuple) -> tuple
## In state 32, spurious reduction of production loption(separated_nonempty_list(COMMA,tuple)) -> separated_nonempty_list(COMMA,tuple)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME DEFINE CNAME VNAME
##
## Ends in an error in state: 24.
##
## tuple -> CNAME . [ RPAREN RBRACKET DCOLON COMMA COLON ]
## tuple -> CNAME . LPAREN loption(separated_nonempty_list(COMMA,tuple)) RPAREN [ RPAREN RBRACKET DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME DEFINE UNDERSCORE
##
## Ends in an error in state: 2.
##
## ground_literal -> VNAME DEFINE . tuple [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## VNAME DEFINE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME DEFINE VNAME RANGE UNDERSCORE
##
## Ends in an error in state: 30.
##
## tuple -> expr RANGE . expr [ RPAREN RBRACKET DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr RANGE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME DEFINE VNAME RANGE VNAME VNAME
##
## Ends in an error in state: 31.
##
## expr -> expr . DIV expr [ RPAREN RBRACKET POW PLUS MULT MOD MINUS LOG DIV DCOLON COMMA COLON ]
## expr -> expr . LOG expr [ RPAREN RBRACKET POW PLUS MULT MOD MINUS LOG DIV DCOLON COMMA COLON ]
## expr -> expr . MOD expr [ RPAREN RBRACKET POW PLUS MULT MOD MINUS LOG DIV DCOLON COMMA COLON ]
## expr -> expr . MULT expr [ RPAREN RBRACKET POW PLUS MULT MOD MINUS LOG DIV DCOLON COMMA COLON ]
## expr -> expr . POW expr [ RPAREN RBRACKET POW PLUS MULT MOD MINUS LOG DIV DCOLON COMMA COLON ]
## expr -> expr . PLUS expr [ RPAREN RBRACKET POW PLUS MULT MOD MINUS LOG DIV DCOLON COMMA COLON ]
## expr -> expr . MINUS expr [ RPAREN RBRACKET POW PLUS MULT MOD MINUS LOG DIV DCOLON COMMA COLON ]
## tuple -> expr RANGE expr . [ RPAREN RBRACKET DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr RANGE expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME DEFINE VNAME VNAME
##
## Ends in an error in state: 29.
##
## expr -> expr . DIV expr [ RPAREN RBRACKET RANGE POW PLUS MULT MOD MINUS LOG DIV DCOLON COMMA COLON ]
## expr -> expr . LOG expr [ RPAREN RBRACKET RANGE POW PLUS MULT MOD MINUS LOG DIV DCOLON COMMA COLON ]
## expr -> expr . MOD expr [ RPAREN RBRACKET RANGE POW PLUS MULT MOD MINUS LOG DIV DCOLON COMMA COLON ]
## expr -> expr . MULT expr [ RPAREN RBRACKET RANGE POW PLUS MULT MOD MINUS LOG DIV DCOLON COMMA COLON ]
## expr -> expr . POW expr [ RPAREN RBRACKET RANGE POW PLUS MULT MOD MINUS LOG DIV DCOLON COMMA COLON ]
## expr -> expr . PLUS expr [ RPAREN RBRACKET RANGE POW PLUS MULT MOD MINUS LOG DIV DCOLON COMMA COLON ]
## expr -> expr . MINUS expr [ RPAREN RBRACKET RANGE POW PLUS MULT MOD MINUS LOG DIV DCOLON COMMA COLON ]
## tuple -> expr . [ RPAREN RBRACKET DCOLON COMMA COLON ]
## tuple -> expr . RANGE expr [ RPAREN RBRACKET DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME DIV UNDERSCORE
##
## Ends in an error in state: 17.
##
## expr -> expr DIV . expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr DIV
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME DIV VNAME VNAME
##
## Ends in an error in state: 18.
##
## expr -> expr . DIV expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr DIV expr . [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . LOG expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MOD expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MULT expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . POW expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . PLUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MINUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr DIV expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME EQ SHOW
##
## Ends in an error in state: 99.
##
## list(pair(c_eoperator,term)) -> EQ . term list(pair(c_eoperator,term)) [ LT LEQ GT GEQ ]
## nonempty_list(pair(c_eoperator,term)) -> EQ . term [ DCOLON COMMA COLON ]
## nonempty_list(pair(c_eoperator,term)) -> EQ . term nonempty_list(pair(c_eoperator,term)) [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME EQ VNAME RPAREN
##
## Ends in an error in state: 100.
##
## list(pair(c_eoperator,term)) -> EQ term . list(pair(c_eoperator,term)) [ LT LEQ GT GEQ ]
## nonempty_list(pair(c_eoperator,term)) -> EQ term . [ DCOLON COMMA COLON ]
## nonempty_list(pair(c_eoperator,term)) -> EQ term . nonempty_list(pair(c_eoperator,term)) [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## EQ term
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 46, spurious reduction of production term -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME GEQ SHOW
##
## Ends in an error in state: 132.
##
## chain -> term list(pair(c_eoperator,term)) GEQ . term list(pair(c_egoperator,term)) [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## term list(pair(c_eoperator,term)) GEQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME GEQ VNAME RPAREN
##
## Ends in an error in state: 133.
##
## chain -> term list(pair(c_eoperator,term)) GEQ term . list(pair(c_egoperator,term)) [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## term list(pair(c_eoperator,term)) GEQ term
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 46, spurious reduction of production term -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME GT SHOW
##
## Ends in an error in state: 120.
##
## chain -> term list(pair(c_eoperator,term)) GT . term list(pair(c_egoperator,term)) [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## term list(pair(c_eoperator,term)) GT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME GT VNAME EQ SHOW
##
## Ends in an error in state: 126.
##
## list(pair(c_egoperator,term)) -> EQ . term list(pair(c_egoperator,term)) [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME GT VNAME EQ VNAME RPAREN
##
## Ends in an error in state: 127.
##
## list(pair(c_egoperator,term)) -> EQ term . list(pair(c_egoperator,term)) [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## EQ term
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 46, spurious reduction of production term -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME GT VNAME GEQ SHOW
##
## Ends in an error in state: 124.
##
## list(pair(c_egoperator,term)) -> GEQ . term list(pair(c_egoperator,term)) [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## GEQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME GT VNAME GEQ VNAME RPAREN
##
## Ends in an error in state: 125.
##
## list(pair(c_egoperator,term)) -> GEQ term . list(pair(c_egoperator,term)) [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## GEQ term
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 46, spurious reduction of production term -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME GT VNAME GT SHOW
##
## Ends in an error in state: 122.
##
## list(pair(c_egoperator,term)) -> GT . term list(pair(c_egoperator,term)) [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## GT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME GT VNAME GT VNAME RPAREN
##
## Ends in an error in state: 123.
##
## list(pair(c_egoperator,term)) -> GT term . list(pair(c_egoperator,term)) [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## GT term
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 46, spurious reduction of production term -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME GT VNAME RPAREN
##
## Ends in an error in state: 121.
##
## chain -> term list(pair(c_eoperator,term)) GT term . list(pair(c_egoperator,term)) [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## term list(pair(c_eoperator,term)) GT term
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 46, spurious reduction of production term -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME LEQ SHOW
##
## Ends in an error in state: 117.
##
## chain -> term list(pair(c_eoperator,term)) LEQ . term list(pair(c_eloperator,term)) [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## term list(pair(c_eoperator,term)) LEQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME LEQ VNAME RPAREN
##
## Ends in an error in state: 118.
##
## chain -> term list(pair(c_eoperator,term)) LEQ term . list(pair(c_eloperator,term)) [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## term list(pair(c_eoperator,term)) LEQ term
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 46, spurious reduction of production term -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME LOG UNDERSCORE
##
## Ends in an error in state: 11.
##
## expr -> expr LOG . expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr LOG
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME LOG VNAME VNAME
##
## Ends in an error in state: 12.
##
## expr -> expr . DIV expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . LOG expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr LOG expr . [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MOD expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MULT expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . POW expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . PLUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MINUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr LOG expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME LT SHOW
##
## Ends in an error in state: 105.
##
## chain -> term list(pair(c_eoperator,term)) LT . term list(pair(c_eloperator,term)) [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## term list(pair(c_eoperator,term)) LT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME LT VNAME EQ SHOW
##
## Ends in an error in state: 111.
##
## list(pair(c_eloperator,term)) -> EQ . term list(pair(c_eloperator,term)) [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## EQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME LT VNAME EQ VNAME RPAREN
##
## Ends in an error in state: 112.
##
## list(pair(c_eloperator,term)) -> EQ term . list(pair(c_eloperator,term)) [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## EQ term
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 46, spurious reduction of production term -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME LT VNAME LEQ SHOW
##
## Ends in an error in state: 109.
##
## list(pair(c_eloperator,term)) -> LEQ . term list(pair(c_eloperator,term)) [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LEQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME LT VNAME LEQ VNAME RPAREN
##
## Ends in an error in state: 110.
##
## list(pair(c_eloperator,term)) -> LEQ term . list(pair(c_eloperator,term)) [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LEQ term
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 46, spurious reduction of production term -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME LT VNAME LT SHOW
##
## Ends in an error in state: 107.
##
## list(pair(c_eloperator,term)) -> LT . term list(pair(c_eloperator,term)) [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME LT VNAME LT VNAME RPAREN
##
## Ends in an error in state: 108.
##
## list(pair(c_eloperator,term)) -> LT term . list(pair(c_eloperator,term)) [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## LT term
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 46, spurious reduction of production term -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME LT VNAME RPAREN
##
## Ends in an error in state: 106.
##
## chain -> term list(pair(c_eoperator,term)) LT term . list(pair(c_eloperator,term)) [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## term list(pair(c_eoperator,term)) LT term
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 46, spurious reduction of production term -> expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME MINUS UNDERSCORE
##
## Ends in an error in state: 21.
##
## expr -> expr MINUS . expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr MINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME MINUS VNAME VNAME
##
## Ends in an error in state: 22.
##
## expr -> expr . DIV expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . LOG expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MOD expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MULT expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . POW expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . PLUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MINUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr MINUS expr . [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr MINUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME MOD UNDERSCORE
##
## Ends in an error in state: 19.
##
## expr -> expr MOD . expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr MOD
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME MOD VNAME VNAME
##
## Ends in an error in state: 20.
##
## expr -> expr . DIV expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . LOG expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MOD expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr MOD expr . [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MULT expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . POW expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . PLUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MINUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr MOD expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME MULT UNDERSCORE
##
## Ends in an error in state: 15.
##
## expr -> expr MULT . expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr MULT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME MULT VNAME VNAME
##
## Ends in an error in state: 16.
##
## expr -> expr . DIV expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . LOG expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MOD expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MULT expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr MULT expr . [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . POW expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . PLUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MINUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr MULT expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME NEQ CNAME LPAREN SHOW
##
## Ends in an error in state: 42.
##
## term -> CNAME LPAREN . loption(separated_nonempty_list(COMMA,term)) RPAREN [ RPAREN RBRACKET NEQ LT LEQ GT GEQ EQ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME NEQ CNAME LPAREN VNAME RBRACKET
##
## Ends in an error in state: 48.
##
## term -> CNAME LPAREN loption(separated_nonempty_list(COMMA,term)) . RPAREN [ RPAREN RBRACKET NEQ LT LEQ GT GEQ EQ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## CNAME LPAREN loption(separated_nonempty_list(COMMA,term))
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 46, spurious reduction of production term -> expr
## In state 43, spurious reduction of production separated_nonempty_list(COMMA,term) -> term
## In state 47, spurious reduction of production loption(separated_nonempty_list(COMMA,term)) -> separated_nonempty_list(COMMA,term)
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME NEQ CNAME VNAME
##
## Ends in an error in state: 41.
##
## term -> CNAME . [ RPAREN RBRACKET LT LEQ GT GEQ EQ DCOLON COMMA COLON ]
## term -> CNAME . LPAREN loption(separated_nonempty_list(COMMA,term)) RPAREN [ RPAREN RBRACKET LT LEQ GT GEQ EQ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## CNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME NEQ SHOW
##
## Ends in an error in state: 97.
##
## ground_literal -> term NEQ . term [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## term NEQ
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME NEQ UNDERSCORE VNAME
##
## Ends in an error in state: 153.
##
## separated_nonempty_list(COMMA,ground_literal) -> ground_literal . [ DCOLON COLON ]
## separated_nonempty_list(COMMA,ground_literal) -> ground_literal . COMMA separated_nonempty_list(COMMA,ground_literal) [ DCOLON COLON ]
##
## The known suffix of the stack is as follows:
## ground_literal
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME PLUS UNDERSCORE
##
## Ends in an error in state: 13.
##
## expr -> expr PLUS . expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr PLUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME PLUS VNAME VNAME
##
## Ends in an error in state: 14.
##
## expr -> expr . DIV expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . LOG expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MOD expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MULT expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . POW expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . PLUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr PLUS expr . [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MINUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr PLUS expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME POW UNDERSCORE
##
## Ends in an error in state: 9.
##
## expr -> expr POW . expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr POW
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME POW VNAME VNAME
##
## Ends in an error in state: 10.
##
## expr -> expr . DIV expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . LOG expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MOD expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MULT expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . POW expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr POW expr . [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . PLUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
## expr -> expr . MINUS expr [ RPAREN RBRACKET RANGE POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## expr POW expr
##

<YOUR SYNTAX ERROR MESSAGE HERE>

file: VNAME VNAME
##
## Ends in an error in state: 1.
##
## expr -> VNAME . [ POW PLUS NEQ MULT MOD MINUS LT LOG LEQ GT GEQ EQ DIV ]
## ground_literal -> VNAME . DEFINE tuple [ DCOLON COMMA COLON ]
##
## The known suffix of the stack is as follows:
## VNAME
##

<YOUR SYNTAX ERROR MESSAGE HERE>

